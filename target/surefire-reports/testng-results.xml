<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="9" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-09-09T21:33:30 PET" name="vehicletest.VehicleTest" finished-at="2021-09-09T21:33:30 PET" duration-ms="137">
    <groups>
    </groups>
    <test started-at="2021-09-09T21:33:30 PET" name="Command line test" finished-at="2021-09-09T21:33:30 PET" duration-ms="137">
      <class name="vehicletest.VehicleTest">
        <test-method signature="TestCarWhileRefuelFail()[pri:0, instance:vehicletest.VehicleTest@311bf055]" started-at="2021-09-09T21:33:30 PET" name="TestCarWhileRefuelFail" finished-at="2021-09-09T21:33:30 PET" duration-ms="19" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCarWhileRefuelFail -->
        <test-method signature="TestCarWhileRefuelSuccess()[pri:0, instance:vehicletest.VehicleTest@311bf055]" started-at="2021-09-09T21:33:30 PET" name="TestCarWhileRefuelSuccess" finished-at="2021-09-09T21:33:30 PET" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCarWhileRefuelSuccess -->
        <test-method signature="TestCarWhileTripFail()[pri:0, instance:vehicletest.VehicleTest@311bf055]" started-at="2021-09-09T21:33:30 PET" name="TestCarWhileTripFail" finished-at="2021-09-09T21:33:30 PET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCarWhileTripFail -->
        <test-method signature="TestCarWhileTripSuccess()[pri:0, instance:vehicletest.VehicleTest@311bf055]" started-at="2021-09-09T21:33:30 PET" name="TestCarWhileTripSuccess" finished-at="2021-09-09T21:33:30 PET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCarWhileTripSuccess -->
        <test-method signature="TestTruckWhileRefuelFail()[pri:0, instance:vehicletest.VehicleTest@311bf055]" started-at="2021-09-09T21:33:30 PET" name="TestTruckWhileRefuelFail" finished-at="2021-09-09T21:33:30 PET" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Camíon  no  se  puede  reabastecer  el  tanque,  sobrepasa la capacidad] but found [Cami��on  no  se  puede  reabastecer  el  tanque,  sobrepasa la capacidad]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Camíon  no  se  puede  reabastecer  el  tanque,  sobrepasa la capacidad] but found [Cami��on  no  se  puede  reabastecer  el  tanque,  sobrepasa la capacidad]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at vehicletest.VehicleTest.TestTruckWhileRefuelFail(VehicleTest.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestTruckWhileRefuelFail -->
        <test-method signature="TestTruckWhileRefuelSuccess()[pri:0, instance:vehicletest.VehicleTest@311bf055]" started-at="2021-09-09T21:33:30 PET" name="TestTruckWhileRefuelSuccess" finished-at="2021-09-09T21:33:30 PET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestTruckWhileRefuelSuccess -->
        <test-method signature="TestTruckWhileTripFail()[pri:0, instance:vehicletest.VehicleTest@311bf055]" started-at="2021-09-09T21:33:30 PET" name="TestTruckWhileTripFail" finished-at="2021-09-09T21:33:30 PET" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Camión necesita reabastecimiento de combustible] but found [Cami��n necesita reabastecimiento de combustible]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Camión necesita reabastecimiento de combustible] but found [Cami��n necesita reabastecimiento de combustible]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at vehicletest.VehicleTest.TestTruckWhileTripFail(VehicleTest.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestTruckWhileTripFail -->
        <test-method signature="TestTruckWhileTripSuccess()[pri:0, instance:vehicletest.VehicleTest@311bf055]" started-at="2021-09-09T21:33:30 PET" name="TestTruckWhileTripSuccess" finished-at="2021-09-09T21:33:30 PET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestTruckWhileTripSuccess -->
        <test-method signature="TestVehicleSupplying()[pri:0, instance:vehicletest.VehicleTest@311bf055]" started-at="2021-09-09T21:33:30 PET" name="TestVehicleSupplying" finished-at="2021-09-09T21:33:30 PET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestVehicleSupplying -->
        <test-method signature="TestVehicleSetCapacity()[pri:0, instance:vehicletest.VehicleTest@311bf055]" started-at="2021-09-09T21:33:30 PET" name="TestVehicleSetCapacity" finished-at="2021-09-09T21:33:30 PET" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestVehicleSetCapacity -->
        <test-method signature="TestVehicleTrip()[pri:0, instance:vehicletest.VehicleTest@311bf055]" started-at="2021-09-09T21:33:30 PET" name="TestVehicleTrip" finished-at="2021-09-09T21:33:30 PET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestVehicleTrip -->
      </class> <!-- vehicletest.VehicleTest -->
    </test> <!-- Command line test -->
  </suite> <!-- vehicletest.VehicleTest -->
</testng-results>
