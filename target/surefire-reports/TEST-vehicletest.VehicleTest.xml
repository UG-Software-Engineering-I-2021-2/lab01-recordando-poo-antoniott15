<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="11" failures="2" name="vehicletest.VehicleTest" time="0.044" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="java.vm.version" value="16.0.1+0"/>
    <property name="sun.boot.library.path" value="/usr/local/Cellar/openjdk/16.0.1/libexec/openjdk.jdk/Contents/Home/lib"/>
    <property name="maven.multiModuleProjectDirectory" value="/Users/antoniotoche/IdeaProjects/lab1"/>
    <property name="java.vm.vendor" value="Homebrew"/>
    <property name="java.vendor.url" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=":"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="user.country" value="PE"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/Users/antoniotoche/IdeaProjects/lab1"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="java.runtime.version" value="16.0.1+0"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.io.tmpdir" value="/var/folders/zg/9hpmn3rn2jn6y227h2gs255w0000gn/T/"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="classworlds.conf" value="/usr/local/Cellar/maven/3.8.1/libexec/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/antoniotoche/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="maven.conf" value="/usr/local/Cellar/maven/3.8.1/libexec/conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="60.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="11.5.2"/>
    <property name="library.jansi.path" value="/usr/local/Cellar/maven/3.8.1/libexec/lib/jansi-native"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="user.home" value="/Users/antoniotoche"/>
    <property name="user.timezone" value="America/Lima"/>
    <property name="file.encoding" value="US-ASCII"/>
    <property name="java.specification.version" value="16"/>
    <property name="user.name" value="antoniotoche"/>
    <property name="java.class.path" value="/usr/local/Cellar/maven/3.8.1/libexec/boot/plexus-classworlds-2.6.0.jar"/>
    <property name="java.vm.specification.version" value="16"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar"/>
    <property name="java.home" value="/usr/local/Cellar/openjdk/16.0.1/libexec/openjdk.jdk/Contents/Home"/>
    <property name="user.language" value="es"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.version" value="16.0.1"/>
    <property name="java.vendor" value="Homebrew"/>
    <property name="maven.home" value="/usr/local/Cellar/maven/3.8.1/libexec"/>
    <property name="file.separator" value="/"/>
    <property name="java.version.date" value="2021-04-20"/>
    <property name="java.vendor.url.bug" value="https://github.com/Homebrew/homebrew-core/issues"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="java.vendor.version" value="Homebrew"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/>
  </properties>
  <testcase classname="vehicletest.VehicleTest" name="TestCarWhileRefuelFail" time="0.02"/>
  <testcase classname="vehicletest.VehicleTest" name="TestCarWhileRefuelSuccess" time="0"/>
  <testcase classname="vehicletest.VehicleTest" name="TestCarWhileTripFail" time="0"/>
  <testcase classname="vehicletest.VehicleTest" name="TestCarWhileTripSuccess" time="0"/>
  <testcase classname="vehicletest.VehicleTest" name="TestTruckWhileRefuelFail" time="0.023">
    <failure message="expected [Camíon  no  se  puede  reabastecer  el  tanque,  sobrepasa la capacidad] but found [Cami��on  no  se  puede  reabastecer  el  tanque,  sobrepasa la capacidad]" type="java.lang.AssertionError">java.lang.AssertionError: expected [Camíon  no  se  puede  reabastecer  el  tanque,  sobrepasa la capacidad] but found [Cami��on  no  se  puede  reabastecer  el  tanque,  sobrepasa la capacidad]
	at org.testng.Assert.fail(Assert.java:99)
	at org.testng.Assert.failNotEquals(Assert.java:1037)
	at org.testng.Assert.assertEqualsImpl(Assert.java:140)
	at org.testng.Assert.assertEquals(Assert.java:122)
	at org.testng.Assert.assertEquals(Assert.java:629)
	at org.testng.Assert.assertEquals(Assert.java:639)
	at vehicletest.VehicleTest.TestTruckWhileRefuelFail(VehicleTest.java:35)
</failure>
  </testcase>
  <testcase classname="vehicletest.VehicleTest" name="TestTruckWhileRefuelSuccess" time="0"/>
  <testcase classname="vehicletest.VehicleTest" name="TestTruckWhileTripFail" time="0">
    <failure message="expected [Camión necesita reabastecimiento de combustible] but found [Cami��n necesita reabastecimiento de combustible]" type="java.lang.AssertionError">java.lang.AssertionError: expected [Camión necesita reabastecimiento de combustible] but found [Cami��n necesita reabastecimiento de combustible]
	at org.testng.Assert.fail(Assert.java:99)
	at org.testng.Assert.failNotEquals(Assert.java:1037)
	at org.testng.Assert.assertEqualsImpl(Assert.java:140)
	at org.testng.Assert.assertEquals(Assert.java:122)
	at org.testng.Assert.assertEquals(Assert.java:629)
	at org.testng.Assert.assertEquals(Assert.java:639)
	at vehicletest.VehicleTest.TestTruckWhileTripFail(VehicleTest.java:28)
</failure>
  </testcase>
  <testcase classname="vehicletest.VehicleTest" name="TestTruckWhileTripSuccess" time="0"/>
  <testcase classname="vehicletest.VehicleTest" name="TestVehicleSetCapacity" time="0"/>
  <testcase classname="vehicletest.VehicleTest" name="TestVehicleSupplying" time="0"/>
  <testcase classname="vehicletest.VehicleTest" name="TestVehicleTrip" time="0.001"/>
</testsuite>